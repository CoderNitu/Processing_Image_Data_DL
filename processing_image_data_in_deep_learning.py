# -*- coding: utf-8 -*-
"""Processing image data in deep learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hHQg-2Nmfor6gNtQPjNh3jEegS9msrDr

TODO:


*   Reading an image file an converting it to a numpy array.
*   Resizing an images
*   RGB to Grayscale Conversion
"""

# getting an image or downloading an image directly in our google colab directray using web get command

! wget 'https://bitly.ws/39Lh9'

"""Libraries that can be used for Image processing:

1. matplotlib.pyplot

2. Pillow(PIL)

3. OpenCV(CV2)
"""

#importing the image module from matplotlib library

import matplotlib.image as mpimg
import matplotlib.pyplot as plt

# loading an image using matplotlib.image module
img = mpimg.imread('/content/cat_rgb_image.jpg')

type(img)

print(img.shape)

print(img)

# displaying the images from numpy array

img_plot = plt.imshow(img)
plt.show()

"""**Resizing the image using Pillow library:**"""

from PIL import Image

img = Image.open('/content/cat_rgb_image.jpg')
img_resized = img.resize((200,200))

img_resized.save('cat_resize_img.jpg')

#vizualize the image
img_res = mpimg.imread('/content/cat_resize_img.jpg')
img_res_plot = plt.imshow(img_res)
plt.show()

type(img_res)

print(img_res.shape)

"""**Converting RGB to Grayscale image using OpenCV**"""

import cv2

img = cv2.imread('/content/cat_rgb_image.jpg')

type(img)

img.shape

grayscale_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

type(grayscale_img)

grayscale_img.shape

"""cv2.imshow() can also be used to display images, but it will not work in google colab.

So, we used:

**from google.colab.patches import cv2_imshow**


"""

from google.colab.patches import cv2_imshow

# display the image
cv2_imshow(grayscale_img)

# saving an image using cv2
cv2.imwrite('cat_grayscale_img.jpg',grayscale_img)

